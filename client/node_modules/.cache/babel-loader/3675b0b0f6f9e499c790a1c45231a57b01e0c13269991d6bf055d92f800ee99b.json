{"ast":null,"code":"var _jsxFileName = \"/Users/kyledomen/Documents/Projects/twitch-chatkeeper/client/src/App.js\",\n  _s = $RefreshSig$();\n// client/src/App.js\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nconst ChatComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const messagesEndRef = useRef(null);\n  const chatBoxRef = useRef(null);\n  const [isAtBottom, setIsAtBottom] = useState(true);\n\n  // Memoize the scrollToBottom function to prevent re-definition on every render\n  const scrollToBottom = useCallback(() => {\n    if (isAtBottom) {\n      var _messagesEndRef$curre;\n      (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [isAtBottom]);\n  useEffect(() => {\n    socket.on('channelName', name => {\n      const channelNameElement = document.getElementById('channel-name');\n      channelNameElement.innerText = `${name}'s chat`;\n    });\n    axios.get('http://localhost:4000/api/messages').then(response => {\n      setMessages(response.data);\n    }).catch(error => console.error('Error fetching messages; ', error));\n    socket.on('twitchMessage', newMessage => {\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    });\n    return () => {\n      socket.off('channelName');\n      socket.off('twitchMessage');\n    };\n  }, []);\n\n  // Handle scroll behavior\n  const handleScroll = () => {\n    const chatBox = chatBoxRef.current;\n    if (!chatBox) return;\n    const atBottom = chatBox.scrollHeight - chatBox.clientHeight <= chatBox.scrollTop + 1;\n    setIsAtBottom(atBottom);\n  };\n\n  // Auto-scroll when new messages are received, but only if the user is at the bottom\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]); // Add scrollToBottom in the dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      ref: chatBoxRef,\n      onScroll: handleScroll,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"message-list\",\n        children: [messages.map((data, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              color: data.color\n            },\n            children: [data.username, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: '5px'\n            },\n            children: data.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatComponent, \"KUqT49AwIVQ6ftlrIlSp6EORuGU=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","io","axios","jsxDEV","_jsxDEV","socket","ChatComponent","_s","messages","setMessages","messagesEndRef","chatBoxRef","isAtBottom","setIsAtBottom","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","on","name","channelNameElement","document","getElementById","innerText","get","then","response","data","catch","error","console","newMessage","prevMessages","off","handleScroll","chatBox","atBottom","scrollHeight","clientHeight","scrollTop","className","children","ref","onScroll","map","index","style","color","username","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","message","_c","$RefreshReg$"],"sources":["/Users/kyledomen/Documents/Projects/twitch-chatkeeper/client/src/App.js"],"sourcesContent":["// client/src/App.js\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport './App.css';\n\nconst socket = io('http://localhost:4000');\n\nconst ChatComponent = () => {\n    const [messages, setMessages] = useState([]);\n    const messagesEndRef = useRef(null);\n    const chatBoxRef = useRef(null);\n    const [isAtBottom, setIsAtBottom] = useState(true);\n\n    // Memoize the scrollToBottom function to prevent re-definition on every render\n    const scrollToBottom = useCallback(() => {\n        if (isAtBottom) {\n            messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n        }\n    }, [isAtBottom]);\n\n    useEffect(() => {\n        socket.on('channelName', (name) => {\n            const channelNameElement = document.getElementById('channel-name');\n            channelNameElement.innerText = `${name}'s chat`;\n        });\n\n        axios.get('http://localhost:4000/api/messages')\n            .then(response => {\n                setMessages(response.data);\n            })\n            .catch(error => console.error('Error fetching messages; ', error));\n\n        socket.on('twitchMessage', (newMessage) => {\n            setMessages((prevMessages) => [...prevMessages, newMessage]);\n        });\n\n        return () => {\n            socket.off('channelName');\n            socket.off('twitchMessage');\n        };\n    }, []);\n\n    // Handle scroll behavior\n    const handleScroll = () => {\n        const chatBox = chatBoxRef.current;\n    \n        if (!chatBox) return;\n    \n        const atBottom = chatBox.scrollHeight - chatBox.clientHeight <= chatBox.scrollTop + 1;\n        setIsAtBottom(atBottom);\n    };\n\n    // Auto-scroll when new messages are received, but only if the user is at the bottom\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages, scrollToBottom]); // Add scrollToBottom in the dependency array\n\n    return (\n        <div className=\"chat-container\">\n            <div className=\"chat-box\" ref={chatBoxRef} onScroll={handleScroll}>\n                <ul className=\"message-list\">\n                    {messages.map((data, index) => (\n                        <li key={index}>\n                            <strong style={{ color: data.color }}>{data.username}:</strong>\n                            <span style={{ marginLeft: '5px' }}>{data.message}</span>\n                        </li>\n                    ))}\n                    {/* Ref element to ensure auto-scroll to bottom */}\n                    <div ref={messagesEndRef} />\n                </ul>\n            </div>\n        </div>\n    );\n    \n};\n\nexport default ChatComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}