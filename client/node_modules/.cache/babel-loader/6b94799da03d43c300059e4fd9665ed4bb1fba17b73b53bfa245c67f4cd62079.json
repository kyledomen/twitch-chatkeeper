{"ast":null,"code":"var _jsxFileName = \"/Users/kyledomen/Documents/Projects/mang0/client/src/App.js\",\n  _s = $RefreshSig$();\n// client/src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000'); // Connect to your Socket.IO server\n\nconst ChatComponent = () => {\n  _s();\n  // State to hold all incoming messages\n  const [messages, setMessages] = useState([]);\n  // Create a ref to track the message list container\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    // Listen for incoming messages from Socket.IO\n    socket.on('twitchMessage', newMessage => {\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    });\n\n    // Clean up on component unmount\n    return () => {\n      socket.off('twitchMessage');\n    };\n  }, []);\n\n  // Function to scroll to the bottom of the message list\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Scroll to the bottom whenever messages are updated\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.chatContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chatBox,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: styles.messageList,\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n// Inline styles for the chat box\n_s(ChatComponent, \"kG7o1cCHxxq7FrYHEp0DHLazx+Q=\");\n_c = ChatComponent;\nconst styles = {\n  chatContainer: {\n    width: '100%',\n    height: '100%'\n  },\n  chatBox: {\n    height: '300px',\n    // Set a fixed height for the chat box\n    overflowY: 'auto',\n    // Enable vertical scrolling\n    border: '1px solid #ccc',\n    padding: '10px',\n    backgroundColor: '#f9f9f9'\n  },\n  messageList: {\n    listStyleType: 'none',\n    padding: 0\n  }\n};\nexport default ChatComponent;\n\n/*\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:4000'); // Adjust the URL if needed\n\nfunction App() {\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    socket.on('twitchMessage', (msg) => {\n      setMessage(msg);\n    });\n\n    return () => {\n      socket.off('message');\n    };\n  }, []);\n\n  return (\n    <div>\n      <b>most recent chat:</b>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nexport default App;\n*/\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","socket","ChatComponent","_s","messages","setMessages","messagesEndRef","on","newMessage","prevMessages","off","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","style","styles","chatContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","chatBox","messageList","map","message","index","ref","_c","width","height","overflowY","border","padding","backgroundColor","listStyleType","$RefreshReg$"],"sources":["/Users/kyledomen/Documents/Projects/mang0/client/src/App.js"],"sourcesContent":["// client/src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:4000'); // Connect to your Socket.IO server\n\nconst ChatComponent = () => {\n    // State to hold all incoming messages\n    const [messages, setMessages] = useState([]);\n    // Create a ref to track the message list container\n    const messagesEndRef = useRef(null);\n\n    useEffect(() => {\n        // Listen for incoming messages from Socket.IO\n        socket.on('twitchMessage', (newMessage) => {\n            setMessages((prevMessages) => [...prevMessages, newMessage]);\n        });\n\n        // Clean up on component unmount\n        return () => {\n            socket.off('twitchMessage');\n        };\n    }, []);\n\n    // Function to scroll to the bottom of the message list\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    };\n\n    // Scroll to the bottom whenever messages are updated\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages]);\n\n    return (\n        <div style={styles.chatContainer}>\n            <h1>Chat History</h1>\n            <div style={styles.chatBox}>\n                <ul style={styles.messageList}>\n                    {messages.map((message, index) => (\n                        <li key={index}>{message}</li>\n                    ))}\n                    {/* Ref element to ensure auto-scroll to bottom */}\n                    <div ref={messagesEndRef} />\n                </ul>\n            </div>\n        </div>\n    );\n};\n\n// Inline styles for the chat box\nconst styles = {\n    chatContainer: {\n        width: '100%',\n        height: '100%',\n    },\n    chatBox: {\n        height: '300px',       // Set a fixed height for the chat box\n        overflowY: 'auto',      // Enable vertical scrolling\n        border: '1px solid #ccc',\n        padding: '10px',\n        backgroundColor: '#f9f9f9',\n    },\n    messageList: {\n        listStyleType: 'none',\n        padding: 0,\n    }\n};\n\nexport default ChatComponent;\n\n/*\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:4000'); // Adjust the URL if needed\n\nfunction App() {\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    socket.on('twitchMessage', (msg) => {\n      setMessage(msg);\n    });\n\n    return () => {\n      socket.off('message');\n    };\n  }, []);\n\n  return (\n    <div>\n      <b>most recent chat:</b>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nexport default App;\n*/\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}