{"ast":null,"code":"var _jsxFileName = \"/Users/kyledomen/Documents/Projects/twitch-chatkeeper/client/src/App.js\",\n  _s = $RefreshSig$();\n// client/src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000'); // Connect to your Socket.IO server\n\nconst ChatComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const messagesEndRef = useRef(null);\n  const chatBoxRef = useRef(null);\n  const [isUserAtBottom, setIsUserAtBottom] = useState(true);\n  useEffect(() => {\n    socket.on('channelName', name => {\n      const channelNameElement = document.getElementById('channel-name');\n      channelNameElement.innerText = `${name}'s chat`;\n    });\n    axios.get('http://localhost:4000/api/messages').then(response => {\n      setMessages(response.data);\n    }).catch(error => console.error('Error fetching messages; ', error));\n    socket.on('twitchMessage', newMessage => {\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    });\n    return () => {\n      socket.off('channelName');\n      socket.off('twitchMessage');\n    };\n  }, []);\n\n  // Scroll to bottom if the user is already at the bottom of the chat\n  const scrollToBottom = () => {\n    if (isUserAtBottom) {\n      var _messagesEndRef$curre;\n      (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  // Detect if the user is at the bottom of the chat box\n  const handleScroll = () => {\n    if (chatBoxRef.current) {\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight\n      } = chatBoxRef.current;\n      const isAtBottom = scrollHeight - scrollTop === clientHeight; // User is exactly at the bottom\n      setIsUserAtBottom(isAtBottom);\n    }\n  };\n\n  // Attach scroll event listener to the chat box to track user scrolling\n  useEffect(() => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.addEventListener('scroll', handleScroll);\n    }\n    return () => {\n      if (chatBoxRef.current) {\n        chatBoxRef.current.removeEventListener('scroll', handleScroll);\n      }\n    };\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"message-list\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [message.username, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), \" \", message.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatComponent, \"kFUPmbAgoWhKCI/HBvBHWJUfEbo=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","axios","jsxDEV","_jsxDEV","socket","ChatComponent","_s","messages","setMessages","messagesEndRef","chatBoxRef","isUserAtBottom","setIsUserAtBottom","on","name","channelNameElement","document","getElementById","innerText","get","then","response","data","catch","error","console","newMessage","prevMessages","off","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleScroll","scrollTop","scrollHeight","clientHeight","isAtBottom","addEventListener","removeEventListener","className","children","map","message","index","username","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/kyledomen/Documents/Projects/twitch-chatkeeper/client/src/App.js"],"sourcesContent":["// client/src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport './App.css';\n\nconst socket = io('http://localhost:4000'); // Connect to your Socket.IO server\n\nconst ChatComponent = () => {\n    const [messages, setMessages] = useState([]);\n    const messagesEndRef = useRef(null);\n    const chatBoxRef = useRef(null);\n    const [isUserAtBottom, setIsUserAtBottom] = useState(true);\n\n    useEffect(() => {\n        socket.on('channelName', (name) => {\n            const channelNameElement = document.getElementById('channel-name');\n            channelNameElement.innerText = `${name}'s chat`;\n        });\n\n        axios.get('http://localhost:4000/api/messages')\n            .then(response => {\n                setMessages(response.data);\n            })\n            .catch(error => console.error('Error fetching messages; ', error));\n\n        socket.on('twitchMessage', (newMessage) => {\n            setMessages((prevMessages) => [...prevMessages, newMessage]);\n        });\n\n        return () => {\n            socket.off('channelName');\n            socket.off('twitchMessage');\n        };\n    }, []);\n\n    // Scroll to bottom if the user is already at the bottom of the chat\n    const scrollToBottom = () => {\n        if (isUserAtBottom) {\n            messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n        }\n    };\n\n    // Detect if the user is at the bottom of the chat box\n    const handleScroll = () => {\n        if (chatBoxRef.current) {\n            const { scrollTop, scrollHeight, clientHeight } = chatBoxRef.current;\n            const isAtBottom = scrollHeight - scrollTop === clientHeight; // User is exactly at the bottom\n            setIsUserAtBottom(isAtBottom);\n        }\n    };\n\n    // Attach scroll event listener to the chat box to track user scrolling\n    useEffect(() => {\n        if (chatBoxRef.current) {\n            chatBoxRef.current.addEventListener('scroll', handleScroll);\n        }\n        return () => {\n            if (chatBoxRef.current) {\n                chatBoxRef.current.removeEventListener('scroll', handleScroll);\n            }\n        };\n    }, []);\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages]);\n\n    return (\n        <div className=\"chat-container\">\n            <div className=\"chat-box\">\n                <ul className=\"message-list\">\n                    {messages.map((message, index) => (\n                        <li key={index}>\n                            <strong>{message.username}:</strong> {message.message}\n                        </li>\n                    ))}\n                    {/* Ref element to ensure auto-scroll to bottom */}\n                    <div ref={messagesEndRef} />\n                </ul>\n            </div>\n        </div>\n    );\n    \n};\n\nexport default ChatComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}